
@using OnlineShop.Models.OnlineShopDatabase.Goods;
@model OnlineShop.Models.OnlineShopDatabase.Goods.Product
@{
    IEnumerable<SubCategory> subCatList = (IEnumerable<SubCategory>)ViewData["SubCategories"];
    IEnumerable<Category> catList = (IEnumerable<Category>)ViewData["Categories"];
}
<link href="~/Content/ValidationStyle.css" rel="stylesheet" type="text/css" />
<link href="~/Content/DescriptionParameters.css" rel="stylesheet" type="text/css" />
<link href="~/Content/AddProducts.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/formScript.js" type="text/javascript"></script>
<script src="~/Scripts/FillSubCategory.js" type="text/javascript"></script>
<script src="~/Scripts/DiscriptionParameters.js" type="text/javascript"></script>
<script src="~/Scripts/FileInputEventListener.js" type="text/javascript"></script>
<div id="AddProductContainer">

    @using (Html.BeginForm("ShowAddedProduct", "AddProductsDialog", FormMethod.Post,
                        new { id = "AddProdForm", @Class = "form-group" }))
    {
        <p>Name of product:</p>@Html.TextBoxFor(x => x.Name,
                              new { @Class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name);
        <p>Article of product:</p>@Html.TextBoxFor(x => x.Article,
                                 new { @Class = "form-control" })
        @Html.ValidationMessageFor(x => x.Article)
        <p>Price:</p>@Html.TextBoxFor(x => x.Price, new { type = "number", step = "0.01", @Class = "form-control" })

        @Html.ValidationMessageFor(x => x.Price)

       
        <p>Category:</p>
        @Html.DropDownListFor(x => x.SubCategory.Category, new SelectList(catList, "Id", "category"),
       "Select category",
       new { @Class = "form-control" });
        <p>SubCategory:</p>
        @Html.DropDownListFor(x => x.SubCategory_Id, new SelectList(subCatList,
       "Id", "Subcategory"), "Select sub category", new { @Class = "form-control" })
        @Html.ValidationMessageFor(x => x.SubCategory_Id)
        <p>Upload picture:</p>
        <div>
            <input value="Upload image" type="file" name="uploadedImage" id="realButton" />
            <input value="Upload image" type="button" id="fakeButton" />
            <img id="previewPicture" src="#"/>
        </div>

        <p>Description parameters:</p>
        <div id="Descriptions">
            @Html.EditorFor(x => x.Descriptions, new { Id = "DescriptEditor" })
        </div>

        <br />
        <br />
        <input id="submitValidation" type="submit" value="Add" />
    }
    <div id="ProgressShow" class="progress progress-striped">
        <div class="progress-bar progress-bar-success">
            0%
            <p id="status"></p>
        </div>
    </div>
</div>
